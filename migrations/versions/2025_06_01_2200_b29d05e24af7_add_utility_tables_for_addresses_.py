"""Add utility tables for addresses, services, tariffs and readings

Revision ID: b29d05e24af7
Revises: b85f3776a8f8
Create Date: 2025-06-01 22:00:26.690639

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b29d05e24af7'
down_revision = 'b85f3776a8f8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('utility_addresses',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Назва адреси (Квартира, Дача)'),
    sa.Column('address', sa.String(length=255), nullable=False, comment='Повна адреса'),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_utility_addresses_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_utility_addresses'))
    )
    op.create_index(op.f('ix_utility_addresses_user_id'), 'utility_addresses', ['user_id', 'name'], unique=True)
    op.create_table('utility_services',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Назва послуги (Електроенергія, Водопостачання)'),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=False, comment='Одиниця виміру (кВт/год, м³)'),
    sa.Column('meter_number', sa.String(length=50), nullable=True, comment='Номер лічильника'),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['utility_addresses.id'], name=op.f('fk_utility_services_address_id_utility_addresses')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_utility_services_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_utility_services'))
    )
    op.create_index(op.f('ix_utility_services_user_id'), 'utility_services', ['user_id', 'address_id', 'name'], unique=True)
    op.create_table('utility_tariffs',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Назва тарифу (Денний, Нічний, Подача води)'),
    sa.Column('rate', sa.Float(), nullable=False, comment='Ставка за одиницю'),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('valid_from', sa.DateTime(), nullable=False, comment='Дата початку дії тарифу'),
    sa.Column('valid_to', sa.DateTime(), nullable=True, comment='Дата закінчення дії тарифу'),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['utility_services.id'], name=op.f('fk_utility_tariffs_service_id_utility_services')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_utility_tariffs'))
    )
    op.create_index(op.f('ix_utility_tariffs_service_id'), 'utility_tariffs', ['service_id', 'name', 'valid_from'], unique=True)
    op.create_table('utility_readings',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('period', sa.String(length=7), nullable=False, comment='Період YYYY-MM'),
    sa.Column('current_reading', sa.Float(), nullable=False, comment='Поточний показник'),
    sa.Column('previous_reading', sa.Float(), nullable=True, comment='Попередній показник'),
    sa.Column('consumption', sa.Float(), nullable=True, comment='Споживання'),
    sa.Column('tariff_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True, comment='Сума до сплати'),
    sa.Column('reading_date', sa.DateTime(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['utility_addresses.id'], name=op.f('fk_utility_readings_address_id_utility_addresses')),
    sa.ForeignKeyConstraint(['service_id'], ['utility_services.id'], name=op.f('fk_utility_readings_service_id_utility_services')),
    sa.ForeignKeyConstraint(['tariff_id'], ['utility_tariffs.id'], name=op.f('fk_utility_readings_tariff_id_utility_tariffs')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_utility_readings_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_utility_readings'))
    )
    op.create_index(op.f('ix_utility_readings_user_id'), 'utility_readings', ['user_id', 'address_id', 'service_id', 'period'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_utility_readings_user_id'), table_name='utility_readings')
    op.drop_table('utility_readings')
    op.drop_index(op.f('ix_utility_tariffs_service_id'), table_name='utility_tariffs')
    op.drop_table('utility_tariffs')
    op.drop_index(op.f('ix_utility_services_user_id'), table_name='utility_services')
    op.drop_table('utility_services')
    op.drop_index(op.f('ix_utility_addresses_user_id'), table_name='utility_addresses')
    op.drop_table('utility_addresses')
    # ### end Alembic commands ###
