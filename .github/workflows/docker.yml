name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Debug connection info
        run: |
          echo "Host: ${{ secrets.HOST }}"
          echo "Username: www"

      - name: Execute commands on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: www
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          debug: true
          script: |
            cd /home/www/finman/finman_api
            
            # Налаштування Git для автоматичного злиття
            git config pull.rebase false
            
            # Збережемо email і ім'я для коміту
            git config user.email "deploy@example.com"
            git config user.name "Deploy Bot"
            
            git fetch origin main
            
            COMMIT_MSG=$(git log -1 --pretty=%B origin/main)
            MIGRATION_CHANGES=$(git diff --name-only HEAD origin/main | grep -c "migrations/\|models/")
            
            # Безпечно оновлюємо з віддаленого репозиторію
            git pull origin main
            
            # Зупиняємо і перебудовуємо контейнер
            docker compose down
            docker compose up -d --build
            
            sleep 10
            
            # Пропускаємо міграції, якщо є мітка [nomigrate]
            if echo "$COMMIT_MSG" | grep -q "\[nomigrate\]"; then
              echo "Знайдено мітку [nomigrate], пропускаю міграції."
              exit 0
            fi
            
            # Виконати міграції
            MIGRATION_EXECUTED=0
            if echo "$COMMIT_MSG" | grep -q "\[migrate\]" || [ "$MIGRATION_CHANGES" -gt 0 ]; then
              echo "Запускаю міграції бази даних..."
              
              # Додаємо дебаг для перевірки стану бази даних перед міграцією
              echo "=== Стан міграцій перед виконанням ==="
              docker exec finman_api flask db current
              
              # Запускаємо міграції БЕЗ опції --verbose, яка викликає помилку
              docker exec finman_api flask db upgrade > migration_output.log 2>&1
              
              # Перевіряємо результат міграції
              MIGRATE_RESULT=$?
              
              # Виводимо лог міграцій незалежно від результату
              echo "=== Лог міграцій ==="
              cat migration_output.log
              
              # Перевіряємо помилки в логах
              if [ $MIGRATE_RESULT -ne 0 ]; then
                echo "=== ПОМИЛКА МІГРАЦІЇ! ==="
                cat migration_output.log | grep -i "error\|exception\|failed"
                exit 1
              fi
              
              # Перевіряємо стан міграцій після виконання
              echo "=== Стан міграцій після виконання ==="
              docker exec finman_api flask db current
              
              # Якщо було створено нові файли міграцій, додамо їх до Git
              if [ -d "migrations/versions" ]; then
                git add migrations/versions
                
                # Перевіримо, чи є нові файли для коміту
                if git status --porcelain | grep -q "migrations/versions"; then
                  git commit -m "[auto] Update migration files"
                  MIGRATION_EXECUTED=1
                fi
              fi
            else
              echo "Міграції не потрібні."
            fi